const fetch = require("node-fetch");

async function finalTest() {
  try {
    // Login
    const loginResponse = await fetch("http://localhost:5000/api/auth/login", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ username: "keroles", password: "keroles123" }),
    });
    const {
      data: { token },
    } = await loginResponse.json();

    console.log(
      "๐งช Creating different absence patterns for comprehensive test...\n"
    );

    // Get Friday dates
    const today = new Date();
    const dayOfWeek = today.getDay();
    let daysAgo =
      dayOfWeek === 5 ? 0 : dayOfWeek > 5 ? dayOfWeek - 5 : dayOfWeek + 2;

    const fridays = [];
    for (let i = 0; i < 8; i++) {
      const friday = new Date();
      friday.setDate(today.getDate() - daysAgo - i * 7);
      fridays.push(friday.toISOString().split("T")[0]);
    }

    console.log("๐ Friday dates (newest first):", fridays.slice(0, 4));

    // Scenario 1: ุจูุชุฑ - ุญุถุฑ ูุฐุง ุงูุฃุณุจูุน (ูู ูุธูุฑ ูู ุงูุงูุชูุงุฏ)
    await fetch("http://localhost:5000/api/attendance", {
      method: "POST",
      headers: {
        Authorization: `Bearer ${token}`,
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        childId: "687ab07fb4468d2100e1d060", // ุจูุชุฑ ุณููุฑ
        date: fridays[0], // This week
        status: "present",
        notes: "ุญุถุฑ ูุฐุง ุงูุฃุณุจูุน",
      }),
    });
    console.log("โ ุจูุชุฑ ุณููุฑ - ุญุถุฑ ูุฐุง ุงูุฃุณุจูุน (ูู ูุธูุฑ ูู ุงูุงูุชูุงุฏ)");

    // Scenario 2: ูุฑูู - ุญุถุฑุช ูุจู ุฃุณุจูุนุ ุบุงุจุช ูุฐุง ุงูุฃุณุจูุน (ุบูุงุจ ุฃุณุจูุน ูุงุญุฏ - ูู ุชุธูุฑ)
    await fetch("http://localhost:5000/api/attendance", {
      method: "POST",
      headers: {
        Authorization: `Bearer ${token}`,
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        childId: "687ab07fb4468d2100e1d062", // ูุฑูู ุฌูุฑุฌ
        date: fridays[1], // Last week
        status: "present",
        notes: "ุญุถุฑุช ุงูุฃุณุจูุน ุงููุงุถู",
      }),
    });
    console.log(
      "โ ูุฑูู ุฌูุฑุฌ - ุญุถุฑุช ุงูุฃุณุจูุน ุงููุงุถู (ุบูุงุจ ุฃุณุจูุน ูุงุญุฏ - ูู ุชุธูุฑ)"
    );

    // Scenario 3: ูุงุฑู - ุญุถุฑ ูุจู ุฃุณุจูุนููุ ุบุงุจ ุฃุณุจูุนูู ูุชุชุงูููู (ุณูุธูุฑ ูู ูุฌููุนุฉ ุฃุณุจูุนูู)
    await fetch("http://localhost:5000/api/attendance", {
      method: "POST",
      headers: {
        Authorization: `Bearer ${token}`,
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        childId: "687ab07fb4468d2100e1d063", // ูุงุฑู ุตููุฆูู
        date: fridays[2], // 2 weeks ago
        status: "present",
        notes: "ุญุถุฑ ูุจู ุฃุณุจูุนูู",
      }),
    });
    console.log("โ ูุงุฑู ุตููุฆูู - ุญุถุฑ ูุจู ุฃุณุจูุนูู (ุบูุงุจ ุฃุณุจูุนูู ูุชุชุงูููู)");

    // Scenario 4: ููุฑูููุง - ุญุถุฑุช ูุจู 3 ุฃุณุงุจูุนุ ุบุงุจุช 3 ุฃุณุงุจูุน ูุชุชุงููุฉ (ุณูุธูุฑ ูู ูุฌููุนุฉ 3 ุฃุณุงุจูุน)
    await fetch("http://localhost:5000/api/attendance", {
      method: "POST",
      headers: {
        Authorization: `Bearer ${token}`,
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        childId: "687ab07fb4468d2100e1d064", // ููุฑูููุง ุนุงุฏู
        date: fridays[3], // 3 weeks ago
        status: "present",
        notes: "ุญุถุฑุช ูุจู 3 ุฃุณุงุจูุน",
      }),
    });
    console.log("โ ููุฑูููุง ุนุงุฏู - ุญุถุฑุช ูุจู 3 ุฃุณุงุจูุน (ุบูุงุจ 3 ุฃุณุงุจูุน ูุชุชุงููุฉ)");

    // Scenario 5: ูุงููู - ุญุถุฑ ูุจู 4 ุฃุณุงุจูุนุ ุบุงุจ 4 ุฃุณุงุจูุน ูุชุชุงููุฉ
    await fetch("http://localhost:5000/api/attendance", {
      method: "POST",
      headers: {
        Authorization: `Bearer ${token}`,
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        childId: "687ab07fb4468d2100e1d065", // ูุงููู ุฑููุงูู
        date: fridays[4], // 4 weeks ago
        status: "present",
        notes: "ุญุถุฑ ูุจู 4 ุฃุณุงุจูุน",
      }),
    });
    console.log("โ ูุงููู ุฑููุงูู - ุญุถุฑ ูุจู 4 ุฃุณุงุจูุน (ุบูุงุจ 4 ุฃุณุงุจูุน ูุชุชุงููุฉ)");

    // Wait a moment then test
    await new Promise((resolve) => setTimeout(resolve, 1000));

    console.log(
      "\n๐ Testing Follow-up API with different absence patterns...\n"
    );

    const followUpResponse = await fetch(
      "http://localhost:5000/api/attendance/follow-up",
      {
        headers: { Authorization: `Bearer ${token}` },
      }
    );
    const followUpData = await followUpResponse.json();

    console.log("๐ ุงูุงูุชูุงุฏ - ูุชุงุฆุฌ ูููุตูุฉ:");
    console.log("โ".repeat(50));
    console.log(
      `ุฅุฌูุงูู ุงูุฃุทูุงู ุงููุญุชุงุฌูู ููุงูุชูุงุฏ: ${followUpData.data.summary.totalFollowUpChildren}`
    );
    console.log(`ุนุฏุฏ ุงููุฌููุนุงุช: ${followUpData.data.summary.groupsCount}`);
    console.log("โ".repeat(50));

    followUpData.data.groups.forEach((group) => {
      console.log(
        `\n๐ฅ ุงููุฌููุนุฉ: ุบุงูุจูู ${group.consecutiveWeeks} ุฌูุนุฉ ูุชุชุงููุฉ - (${group.count} ุฃุทูุงู)`
      );
      console.log("โ".repeat(40));
      group.children.forEach((child) => {
        console.log(
          `   ๐ ${child.name} - ${child.phone} (ููู ุงูุฃูุฑ: ${child.parentName})`
        );
        console.log(`      ๐ ุงููุตู: ${child.class.name}`);
        console.log(
          `      ๐ ุขุฎุฑ ุญุถูุฑ: ${
            child.lastAttendance
              ? new Date(child.lastAttendance).toLocaleDateString("ar-EG")
              : "ูู ูุญุถุฑ ูู ูุจู"
          }`
        );
        if (child.notes) console.log(`      ๐ ููุงุญุธุฉ: ${child.notes}`);
        console.log("");
      });
    });

    console.log("๐ฏ ููุฎุต ุงููุชุงุฆุฌ:");
    console.log("โข ุจูุชุฑ: ุญุถุฑ ูุฐุง ุงูุฃุณุจูุน โ ุฎุฑุฌ ูู ุงูุงูุชูุงุฏ โ");
    console.log("โข ูุฑูู: ุบุงุจุช ุฃุณุจูุน ูุงุญุฏ โ ูู ุชุธูุฑ (ุฃูู ูู ุฌูุนุชูู) โ");
    console.log("โข ูุงุฑู: ุบุงุจ ุฃุณุจูุนูู ูุชุชุงูููู โ ุธูุฑ ูู ูุฌููุนุฉ ุฃุณุจูุนูู โ");
    console.log(
      "โข ููุฑูููุง: ุบุงุจุช 3 ุฃุณุงุจูุน ูุชุชุงููุฉ โ ุธูุฑุช ูู ูุฌููุนุฉ 3 ุฃุณุงุจูุน โ"
    );
    console.log("โข ูุงููู: ุบุงุจ 4 ุฃุณุงุจูุน ูุชุชุงููุฉ โ ุธูุฑ ูู ูุฌููุนุฉ 4 ุฃุณุงุจูุน โ");
    console.log("โข ุงูุจุงูู: ุบุงูุจูู 12 ุฌูุนุฉ ูุชุชุงููุฉ โ ูุฌููุนุฉ ูููุตูุฉ โ");
  } catch (error) {
    console.error("โ Error:", error.message);
  }
}

finalTest();
